<?php

/**
 * Development-only configuration.
 *
 * Put settings you want enabled when under development mode in this file, and
 * check it into your repository.
 *
 * Developers on your team will then automatically enable them by calling on
 * `composer development-enable`.
 */

declare(strict_types=1);

use Laminas\ConfigAggregator\ConfigAggregator;

return [
    // Toggle the configuration cache. Set this to boolean false, or remove the
    // directive, to disable configuration caching. Toggling development mode
    // will also disable it by default; clear the configuration cache using
    // `composer clear-config-cache`.
    ConfigAggregator::ENABLE_CACHE => false,

    // Enable debugging; typically used to provide debugging information within templates.
    'debug' => true,
    'jwt_encoder' => [
        //  use below the code to create secret key:
        //  php -r "echo base64_encode(openssl_random_pseudo_bytes(32)).PHP_EOL;"
        //  
        'secret_key' => '',
    ],
    'token' => [
        // for strong security reason it should be less
        'session_ttl' => 15, // in minutes (TTL cannot be less then 10 minute)
        // in minutes for how long the token will be valid in the app every "x" time the will be refresh, 
        // you can reduce the time for higher security
        'token_validity' => 5, 
        // maximum number of times a token can be used, 0 = unlimited
        // 
        'max_usage_of_refresh_token' => 60,
    ],
	'db' => [
	 	'driver'   => 'Pdo_Mysql',
	    'driver_options' => [
	        // PDO::ATTR_PERSISTENT => true,
	        // https://www.php.net/manual/tr/mysqlinfo.concepts.buffering.php
	        // 
	        PDO::MYSQL_ATTR_USE_BUFFERED_QUERY => false,  // should be false

			// https://stackoverflow.com/questions/20079320/php-pdo-mysql-how-do-i-return-integer-and-numeric-columns-from-mysql-as-int
			// 
	        PDO::ATTR_EMULATE_PREPARES => false,
	        PDO::ATTR_STRINGIFY_FETCHES => false,
	        
	        // Enable exceptions
	        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
    	],
        'database' => '',
        'hostname' => 'localhost',
        'username' => 'root',
        'password' => '',
        'platform' => 'Mysql',

	],
	'redis' => [
        'host' => 'localhost',
		'port' => '6379',
		'timeout' => 60,
		'password' => '',
	]
];